{
  "hash": "aae654f5a2cc6ebfeb5a65a8ece5a87c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Introducción a R\"\nsubtitle: \"XII Congreso Colombiano de Botánica\"\nauthor:\n  - name: \"Álex Espinosa Correa\"\n    affiliation: \"Universidad de Antioquia\"\n  - name: \"Bladimir Vera Marín\"\n    affiliation: \"Instituto Tecnológico Metropolitano\"\n# date: 2024-11-02\n\nformat: \n  revealjs:\n    theme:\n      - simple\n      - ../../custom.scss\n    width: 1920\n    height: 1080\n    embed-resources: true\n    slide-number: true\n    preview-links: true\n    controls: true\n    touch: false\n    # chalkboard: true\n    code-block-height: 850px\n    logo: \"https://github.com/geobota/geobota.github.io/blob/main/images/xii-ccb/xii-ccb-logo.png?raw=true\"\n    footer: \"[Etnobotánica Cuantitativa en R](https://geobota.github.io/xii-ccb-etnobotanica/)\"\nbibliography: references.bib\ncsl: apa.csl\n---\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n## Proposotio 1\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/figura-proposito-1.png){fig-alt='Un diagrama de dispersión de la masa corporal frente a la longitud de la aleta de los pingüinos, con una línea de mejor ajuste de la relación entre estas dos variables superpuesta. El gráfico muestra una relación positiva, bastante lineal y relativamente fuerte entre estas dos variables. Las especies (Adelia, Barbijo y Papúa) se representan con diferentes colores y la relación entre la masa corporal y la longitud de la aleta es aproximadamente la misma para estas tres especies, y los pingüinos Papúa son #| más grandes que los pingüinos de las otras dos especies.' width=960}\n:::\n:::\n\n\n\n## Proposito 2\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"tabwid\"><style>.cl-70db782e{table-layout:auto;width:100%;}.cl-6fda009e{font-family:'Times New Roman';font-size:18pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-6fda00c6{font-family:'Atkinson Hyperlegible';font-size:18pt;font-weight:normal;font-style:italic;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-6fda00d0{font-family:'Atkinson Hyperlegible';font-size:18pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-70d56cf4{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 2;background-color:transparent;}.cl-70d589aa{background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(0, 0, 0, 1.00);border-top: 0.75pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-70d589b4{background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(0, 0, 0, 1.00);border-top: 0.75pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-70d589b5{background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(0, 0, 0, 1.00);border-top: 0.75pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-70d589b6{background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(0, 0, 0, 1.00);border-top: 0.75pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-70d589be{background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(0, 0, 0, 1.00);border-top: 0.75pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-70d589bf{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-70d589c8{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-70d589c9{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-70d589ca{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-70d589cb{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-70d589d2{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-70d589d3{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-70d589d4{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-70d589dc{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-70d589dd{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-70d589de{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-70d589e6{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-70d589e7{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-70d589e8{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-70d589f0{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-70d589f1{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-70d589f2{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-70d589fa{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-70d589fb{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-70d589fc{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-70d58a04{background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-70d58a05{background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-70d58a06{background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-70d58a0e{background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-70d58a0f{background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing='true' class='cl-70db782e'><thead><tr style=\"overflow-wrap:break-word;\"><th class=\"cl-70d589aa\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda009e\">Especie</span></p></th><th class=\"cl-70d589b4\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda009e\">Isla</span></p></th><th class=\"cl-70d589b5\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda009e\">Sexo</span></p></th><th class=\"cl-70d589b6\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda009e\">n</span></p></th><th class=\"cl-70d589be\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda009e\">Porcentaje (%)</span></p></th></tr></thead><tbody><tr style=\"overflow-wrap:break-word;\"><td  rowspan=\"8\"class=\"cl-70d589bf\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00c6\">Adelie</span></p></td><td  rowspan=\"2\"class=\"cl-70d589c8\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">Biscoe</span></p></td><td class=\"cl-70d589c9\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">Hembra</span></p></td><td class=\"cl-70d589ca\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">22</span></p></td><td class=\"cl-70d589cb\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">50.00</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-70d589c9\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">Macho</span></p></td><td class=\"cl-70d589ca\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">22</span></p></td><td class=\"cl-70d589cb\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">50.00</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td  rowspan=\"3\"class=\"cl-70d589c8\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">Dream</span></p></td><td class=\"cl-70d589c9\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">Hembra</span></p></td><td class=\"cl-70d589ca\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">27</span></p></td><td class=\"cl-70d589cb\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">48.21</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-70d589c9\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">Macho</span></p></td><td class=\"cl-70d589ca\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">28</span></p></td><td class=\"cl-70d589cb\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">50.00</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-70d589d4\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">NA</span></p></td><td class=\"cl-70d589dc\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">1</span></p></td><td class=\"cl-70d589dd\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">1.79</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td  rowspan=\"3\"class=\"cl-70d589e6\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">Torgersen</span></p></td><td class=\"cl-70d589e7\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">Hembra</span></p></td><td class=\"cl-70d589e8\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">24</span></p></td><td class=\"cl-70d589f0\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">46.15</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-70d589e7\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">Macho</span></p></td><td class=\"cl-70d589e8\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">23</span></p></td><td class=\"cl-70d589f0\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">44.23</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-70d589e7\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">NA</span></p></td><td class=\"cl-70d589e8\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">5</span></p></td><td class=\"cl-70d589f0\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">9.62</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td  rowspan=\"2\"class=\"cl-70d589f1\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00c6\">Chinstrap</span></p></td><td  rowspan=\"2\"class=\"cl-70d589f2\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">Dream</span></p></td><td class=\"cl-70d589fa\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">Hembra</span></p></td><td class=\"cl-70d589fb\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">34</span></p></td><td class=\"cl-70d589fc\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">50.00</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-70d589fa\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">Macho</span></p></td><td class=\"cl-70d589fb\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">34</span></p></td><td class=\"cl-70d589fc\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">50.00</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td  rowspan=\"3\"class=\"cl-70d58a04\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00c6\">Gentoo</span></p></td><td  rowspan=\"3\"class=\"cl-70d58a05\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">Biscoe</span></p></td><td class=\"cl-70d589c9\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">Hembra</span></p></td><td class=\"cl-70d589ca\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">58</span></p></td><td class=\"cl-70d589cb\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">46.77</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-70d589c9\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">Macho</span></p></td><td class=\"cl-70d589ca\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">61</span></p></td><td class=\"cl-70d589cb\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">49.19</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-70d58a06\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">NA</span></p></td><td class=\"cl-70d58a0e\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">5</span></p></td><td class=\"cl-70d58a0f\"><p class=\"cl-70d56cf4\"><span class=\"cl-6fda00d0\">4.03</span></p></td></tr></tbody></table></div>\n```\n\n:::\n:::\n\n\n\n## Qué es R\n\n::: columns\n::: {.column .fragment fragment-index=\"1\" width=\"40%\"}\n> R es un sistema para computación estadística y gráficos. Consiste en un lenguaje más un entorno de ejecución con gráficos, un depurador, acceso a ciertas funciones del sistema y la capacidad de ejecutar programas almacenados en archivos de script. @rmanual\n\n![](images/logo_r.png){fig-align=\"center\" width=\"400\"}\n:::\n\n::: {.column .incremental width=\"60%\"}\n-   **Lenguaje**: R es un lenguaje de programación, con sintaxis y funciones propias.\n-   **Entorno de ejecución**: R proporciona un entorno en el que se pueden ejecutar programas escritos en R.\n-   **Gráficos**: R incluye capacidades avanzadas para la creación de gráficos.\n-   **Depurador**: R incluye herramientas para encontrar y corregir errores en sus scripts.\n-   **Acceso a funciones del sistema**: R puede interactuar con el sistema operativo.\n-   **Programas en scripts**: se pueden escribir programas y guardarlos en archivos de texto con extensión .R (scripts).\n:::\n:::\n\n## Historia\n\n![Algunos hitos importantes en la historia de R. Modificado de @giorgi2022.](images/timeline_r.png){fig-align=\"center\"}\n\n## Nuestros guías\n\n::: columns\n::: {.column .fragment width=\"50%\"}\n![R for data science de @wickham2023a. Disponible en [r4ds.hadley.nz/](https://r4ds.hadley.nz/)](images/r4ds.jpg){#r4ds fig-align=\"center\" width=\"381\"}\n:::\n\n::: {.column .fragment width=\"50%\"}\n![Quizá la persona más importante en el ecosistema R.](images/meme_hadley-wickham.jpg){#meme_wickham fig-align=\"center\"}\n:::\n:::\n\n## Flujo de trabajo en ciencias de datos\n\n![En este modelo, todo comienza con la importación y limpieza de los datos. Seguido de un ciclo iterativo de transformación, visualización y modelado. Finalmente, termina con comunicar. Tomado de @wickham2023a.](images/data-science.png){#data-science-1 fig-align=\"center\" width=\"600\"}\n\n## Programar es como llevar un buen matrimonio\n\n::: fragment\n![¡Ya cómete la maldita naranja!](images/meme_comete-naranja.jpeg){fig-align=\"center\"}\n:::\n\n## Recordemos donde estamos\n\n![[Apariencia por defecto de RStudio.](https://docs.posit.co/ide/user/ide/get-started/)](images/rstudio_ide.jpeg){fig-align=\"center\"}\n\n## Ejecutar código\n\nEjecutar código en la consola de R es muy sencillo. Sólo tienes que escribirlo al lado de símbolo de mayor que `>` y presionar `enter` para ejecutarlo. En la consola de R, el signo `>` se conoce como **prompt**, mientras que el código que escribes se llama un comando.\n\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\n> 4 + 2\n[1] 6\n> 4 * 2\n[1] 8\n> 4 / 2\n[1] 2\n> 4**2\n[1] 16\n```\n\nEl número que aparece entre corchetes `[]` informa que esta línea comienza con ese valor del resultado. Algunos comandos devuelven más de un valor y sus resultados pueden ocupar múltiples líneas. Estos números se pueden ignorara en la mayoría de los casos.\n\nLos símbolos `+`, suma; `-`, resta; `*`, multiplicación; `/`, división; `**` o `^`, exponencial; son algunos de operadores matemáticos que tiene R.\n\n## Otros operadores\n\nEl operador dos puntos `:` devuelve todos los enteros entre dos enteros. Es una forma fácil de crear una secuencia de números.\n\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\n> 4:2\n[1] 4 3 2\n```\n\nLos operadores de comparación son: `==` igual `!=` no igual, `>` mayor que, `<` menor que, `>=` mayor o igual que, `<=`menor o igual que.\n\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\n> 4 == 2\n[1] FALSE\n> 4 != 2\n[1] TRUE\n```\n\nLos operadores lógicos son: `|` OR, `&` AND, `!` NOT.\n\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\n> TRUE | FALSE\n[1] TRUE\n> TRUE & FALSE\n[1] FALSE\n> TRUE & !FALSE\n[1] TRUE\n```\n\n## Crear objetos\n\nLas entidades que R crea y manipula se denominan objetos. Un objeto es un nombre que puedes usar para llamar a los datos almacenados. Los objetos se crean utilizando el operador de asignación `<-`. Cuando se crea un objeto este aparecerá en el *environment pane* de RStudio. El atajo de teclado para `<-` es {{< kbd Alt-- >}}\n\n``` {.r filename=\"console\" code-line-numbers=\"false\"}\n> x <- 4 * 2\n```\n\nEn R los nombres se pueden nombrar de cualquier manera, con dos excepciones. Primero, un nombre no puede comenzar con un número. Segundo, un nombre no puede usar algunos símbolos especiales, como \\^, !, \\$, \\@, +, -, /, o \\*.\n\n### Llamar objetos\n\nEl valor de `x` no se imprime en consola, sólo se almacena. Si se quiere ver el valor, hay que llamarlo.\n\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\n> x\n[1] 8\n```\n\n## Crear objetos\n\nSe pueden **c**ombinar múltiples elementos en un vector usando `c()`\n\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\n# crear vector de números primos\nnumeros_primos <- c(2, 3, 5, 7, 11, 13)\n```\n\n### Operación con vectores\n\nAsí mismo, se pueden realizar operación con los vectores.\n\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\n# Multiplicar vector de números primos por dos.\n> numeros_primos * 2\n[1]  4  6 10 14 22 26\n```\n\nR ignora cualquier texto después de `#`. Esto permite escribir comentarios, texto que es ignorado por R pero leído por otras personas. Usa comentarios para explicar el porqué de tu código, no el cómo ni el qué.\n\n## Tipos de datos y estructura de datos\n\n::: columns\n::: {.column width=\"50%\"}\n### Tipos de datos\n\nEn R, hay 5 tipos de datos principales:\n\n-   `numeric`: \n    -   `double`: números reales (con decimales)\n    -   `integer`: números enteros\n-   `character`: cadenas de texto (a.k.a. *strings*)\n-   `complex`: números complejos. \n-   `logical`: `TRUE`, `FALSE`, `NA`. (a.k.a. *booleanos*)\n\n**Para identificar el tipo de datos:**\n\n1. `class()`: dvuelve la clase de un objeto.\n2. `typeof()`: muestra el tipo de dato subyacente.\n3. `mode()`: informa el modo de almacenamiento.\n4. `is.numeric()`, `is.character()`, `is.logical()`, etc.: verifica si el dato es de un tipo específico.\n:::\n\n::: {.column width=\"50%\"}\n### Estructura de datos\n\n-   Vectores: unidimensionales y homogéneos.\n-   Matrices: bidimensionales y homogéneas.\n-   Arrays: multidimensionales y homogéneos.\n-   Data frames: bidimensionales y heterogéneos.\n-   Listas: estructuras heterogéneas y unidimensionales.\n-   Factores: datos categorizados\n\n**Para identificar la estructura de datos:**\n\n1. `str()`: muestra la estructura compacta del objeto.\n2. `dim()`: devuelve las dimensiones (filas y columnas).\n3. `length()`: número total de elementos.\n4. `attributes()`: verifica los atributos del objeto.\n5. `summary()`: resumen estadístico o descriptivo del objeto.\n:::\n:::\n\n## Funciones\n\nLas funciones son bloques de código que realizan una tarea específica y que pueden ser invocadas (llamadas) desde cualquier parte. \n\nEn R las funciones se han de llamar así:\n\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\nnombre_funcion(argumento_1 = valor_1, argumento_2 = valor_2, ...)\n```\n\nProbemos la función `seq()` que crea secuencias regulares de números.\n\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\n> seq(from = 1, to = 10)\n [1]  1  2  3  4  5  6  7  8  9 10\n```\n\nA menudo omitimos los nombres de los primeros argumentos en las llamadas a funciones, por lo que podemos reescribir esto de la siguiente manera:\n\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\n> seq(1, 10)\n [1]  1  2  3  4  5  6  7  8  9 10\n```\n\nAlgunas funciones de R: `mean` calcula la media de un vector. `sum` suma los elementos de un vector. `summary` proporciona un resumen estadístico de un objeto. `str` muestra la estructura de un objeto.\n\n## Paquetes\n\nLos paquetes son las unidades fundamentales del código reproducible en R. Incluyen funciones reutilizables de R, la documentación que describe cómo usarlas y datos de muestra. @wickham2023 Muchos paquetes de R se encuentran en The Comprehensive R Archive Network (CRAN). CRAN es una red de servidores FTP y web alrededor del mundo que almacenan versiones idénticas y actualizadas del código y la documentación de R.\n\n### Instalar y usar paquetes\n\nEn R (casi) todos los paquetes se pueden instalar utilizando la función `install.packages`.\n\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\ninstall.packages(\"ethnobotanyR\")\n```\n\nPara poder usar los paquetes se han de cargar (llamar) usando la función `library()`.\n\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\nlibrary(ethnobotanyR)\n```\n\nFunciones de diferentes paquetes pueden tener el mismo nombre. Por lo cual es recomendable ser explicito a la hora de llamarlas, para lo cual se utilizan `::` entre el nombre del paquete y el nombre de la función.\n\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\nnombre_paquete::nombre_funcion()\n```\n\n\n\n## Esto no es una pipa `|>`\n\nR 4.1.0 introdujo el operador `|>` (pipe). Este operador toma la salida de una función y la pasa a otra función como argumento. Enlaza todos los pasos del análisis de datos haciendo que el código sea más eficiente y legible. \n\n\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\n> media_numeros_primos <- mean(c(2, 3, 5, 7, 11, 13))\n> print(media_numeros_primos)\n[1] 6.833333\n```\n\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\n> numeros_primos <- c(2, 3, 5, 7, 11, 13)\n> media_numeros_primos <- mean(numeros_primos)\n> print(media_numeros_primos)\n[1] 6.833333\n```\n\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\n> media_numeros_primos <- \n+   c(2, 3, 5, 7, 11, 13) |> \n+   mean() |> \n+   print()\n[1] 6.833333\n```\n\nEn RStudio hay que activarlo yendo a la opción `code` de las opciones globales. El atajo de teclado para `|>` es {{< kbd Shift-Ctrl-M >}}\n\n## Scripts\n\nLos scripts son archivos que contienen código en lenguaje R, organizado de manera secuencial para realizar operaciones específicas, análisis de datos, o cualquier tarea que se pueda automatizar.\n\n``` {.r filename=\"script.r\" code-line-numbers=\"true\"}\n# Instalar paquetes\ninstall.packages(\n  c(\n    \"tidyverse\",\n    \"palmerpenguins\"\n    \"ggthemes\"\n  )\n)\n\n# Cargar paquetes\nlibrary(tidyverse)\nlibrary(palmerpenguins)\nlibrary(ggthemes)\n\n# Crea un vector con el gráfico hecho en `ggplot2`\nfig_pinguinos <- \n  palmerpenguins::penguins |> \n  ggplot2::ggplot(\n    ggplot2::aes(\n      x = flipper_length_mm,\n      y = body_mass_g\n    )\n  ) + \n  ggplot2::geom_point()\n\n# Muestras el gráfico\nfig_pinguinos\n```\n\n## Que alguien llame a alguien\n\nAntes de pedir ayuda a los demás, suele ser buena idea que intentes ayudarte a ti mismo.\n\n### Dentro de R\n\nLa función `help` o el operador `?` proporcionan acceso a documentación de las funciones, conjuntos de datos y otros objetos de R. Por ejemplo: `help(lm)` o `help(\"lm\")`, o `?lm` o `?\"lm\"`. Si el paquete de la función no está cargado se tendría que usar `help(rlm, package=\"MASS\")`. Para acceder a la documentación de un paquete se ha usar `help(package=\"MASS\")`. Se puede usar `??` para una palabra o frase en la documentación.\n\n<!-- Algunos paquetes incluyen viñetas o demos. Pueden consultarse usando: `browseVignettes` y `vignette` muestra las viñetas de los paquetes instalados. `browseVignettes(package=\"package-name\")` muestra las viñetas del paquete buscado. `vignette(\"vignette-name\")` muestra la viñeta buscada. `demo` muestra los demo de los paquetes instalados. `demo(package=\"package-name\")` muestra los demo del paquete buscado. `demo(\"demo-name\")` inicia el demo buscado. -->\n\n### Fuera de R\n\n::: columns\n::: {.column width=\"50%\"}\n-   Google is your friend\n-   Stack Overflow\n-   <https://search.r-project.org>\n-   <https://rseek.org>\n:::\n\n::: {.column width=\"50%\"}\nSiempre es buena idea hacer un [reprex]() (minimal reproducible example). Un buen reprex facilita que otras personas puedan ayudarlo y, a menudo, usted mismo descubrirá el problema durante el proceso. Hacer un reprex consiste en:\n\n-   Hacer que tu código sea reproducible, usando `reprex`\n-   Hacerlo mínimo eliminando todo lo que no esté relacionado con el problema.\n:::\n:::\n\n# `<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 640 512\" style=\"height:1em;width:1.25em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:white;overflow:visible;position:relative;\"><path d=\"M64 96c0-35.3 28.7-64 64-64H512c35.3 0 64 28.7 64 64V352H512V96H128V352H64V96zM0 403.2C0 392.6 8.6 384 19.2 384H620.8c10.6 0 19.2 8.6 19.2 19.2c0 42.4-34.4 76.8-76.8 76.8H76.8C34.4 480 0 445.6 0 403.2zM281 209l-31 31 31 31c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-48-48c-9.4-9.4-9.4-24.6 0-33.9l48-48c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9zM393 175l48 48c9.4 9.4 9.4 24.6 0 33.9l-48 48c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l31-31-31-31c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0z\"/></svg>`{=html} Actividad {background-color=\"#0072B2\" transition=\"slide-in\"}\n\n-   Ejemplo de actividad\n-   Ejemplo de actividad\n-   Ejemplo de actividad\n\n<br>\n<br>\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_57a2572b\" data-update-every=\"1\" data-play-sound=\"true\" tabindex=\"0\" style=\"right:0;bottom:0;font-size:2em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">01</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n\n## {background-color=\"black\" background-image=\"images/tidyverse.png\" transition=\"slide-in\"}\n\n## Tidyverse\n\nEl tidyverse es una colección estructurada de paquetes de R diseñados para la ciencia de datos. Todos los paquetes comparten una filosofía de diseño subyacente, una gramática y estructuras de datos. @wickham2019.\n\n``` {.r filename=\"console\" code-line-numbers=\"false\"}\ninstall.packages(\"tidyverse\")\n```\n\nCarguemos el `tidyverse` y observemos la salida.\n\n``` {.r filename=\"console\" code-line-numbers=\"false\"}\n> library(tidyverse)\n── Attaching core tidyverse packages ─────────────────────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ───────────────────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package to force all conflicts to become errors\n```\n\n## Tidyverse y la ciencia de datos\n\n![El Tidyverse tiene multipes paquetes que nos ayudaran durante todo el proceso de analizar los datos. Tomado de @çetinkaya-rundel2023.](images/data-science_tidyverse.png){#data-science-2 fig-align=\"center\"}\n\n## Datos ordenados\n\nHay tres reglas interrelacionadas que hacen que un conjunto de datos esté ordenado:\n\n1.  Cada variable es una columna; cada columna es una variable.\n2.  Cada observación es una fila; cada fila es una observación.\n3.  Cada valor es una celda; cada celda es un único valor.\n\n![Las siguientes tres reglas hacen que un conjunto de datos esté ordenado: las variables son columnas, las observaciones son filas y los valores son celdas. Tomado de @wickham2023a.](images/tidy-1.svg){#tidydata fig-align=\"center\"}\n\n::: footer\nArtículo original @wickham2014\n:::\n\n## Tibbles\n\n-   **Data frame:** estructura de datos bidimensional de variables (en las columnas) y observaciones (en las filas), puede almacenar diferentes tipos de datos.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n```\n\n\n:::\n:::\n\n\n\n\n-   **Tibble:** versión moderna de un data frame, optimizados para un manejo de datos más intuitivo y legible. Pertenece al `tidyverse`.\n\n::: columns\n::: {.column width=\"60%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npalmerpenguins::penguins\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 8\n  species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n  <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n1 Adelie  Torgersen           39.1          18.7               181        3750\n2 Adelie  Torgersen           39.5          17.4               186        3800\n3 Adelie  Torgersen           40.3          18                 195        3250\n4 Adelie  Torgersen           NA            NA                  NA          NA\n5 Adelie  Torgersen           36.7          19.3               193        3450\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n\n\n:::\n:::\n\n\n:::\n\n::: {.column width=\"40%\"}\n![](images/tibble.png){fig-align=\"center\" width=\"400\"}\n:::\n:::\n\n## Conozcamos los datos\n\nLa función `dplyr::glimpse()` es similar a `utils::str()`, pero intenta mostrar la mayor cantidad de datos posible.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  dplyr::glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n```\n\n\n:::\n:::\n\n\n\n::: columns\n::: {.column width=\"60%\"}\nLas tres variables de `palmerpenguins::penguins` que usaremos son:\n\n-   `species`: la especie de un pingüino (Adelie, Chinstrap o Gentoo).\n-   `flipper_length_mm`: longitud de la aleta de un pingüino, en milímetros.\n-   `body_mass_g`: masa corporal de un pingüino, en gramos.\n:::\n\n::: {.column width=\"40%\"}\n![](images/culmen_depth.png)\n:::\n:::\n\n::: footer\nUtilice `?palmerpenguins::penguins` o `?penguins` para saber más sobre los datos.\n:::\n\n## `ggplot2`\n\n::: columns\n::: {.column width=\"60%\"}\nSistema para la creación de gráficos. Se basa en la gramática de gráficos (marco teórico desarrollada por Leland Wilkinson para construir gráficos de manera sistemática y coherente), permitiendo construir gráficos de manera declarativa mediante capas de componentes, como datos, escalas, geoms (formas geométricas), facetas y temas.\n:::\n\n::: {.column width=\"40%\"}\n![](images/ggplot2.png){fig-align=\"center\" width=\"250\"}\n:::\n:::\n\n::: columns\n::: {.column width=\"50%\"}\n![`ggplot2` es como los ogros.](images/meme_shrek.jpeg){fig-align=\"center\"}\n:::\n\n::: {.column width=\"50%\"}\n![Los siete componentes que permiten crear un gráfico en `ggplot2`.](images/diagram_ggplot2.png){fig-align=\"center\"}\n:::\n:::\n\n## `ggplot2` --- Data\n\nPara comenzar un gráfico, primero definimos un objeto gráfico usando la función `ggplot2::ggplot()`. El primer argumento de `ggplot2::ggplot()` son los datos que se utilizará en el gráfico:\n\n\n\n::: {.cell layout-align=\"center\" output-location='column-fragment'}\n\n```{.r .cell-code}\nggplot2::ggplot(\n  data = palmerpenguins::penguins\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-11-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n## `ggplot2` --- Mapping\n\n`mapping` define cómo las variables de los datos se asignan a propiedades visuales (**aesthetics**) del gráfico. Se definen con `ggplot2::aes()`. `x` e `y` especifican qué variables se asignarán a los ejes x e y.\n\n\n\n::: {.cell layout-align=\"center\" output-location='column-fragment'}\n\n```{.r .cell-code}\nggplot2::ggplot(\n  data = palmerpenguins::penguins,\n  mapping = ggplot2::aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-12-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n## `ggplot2` --- Layers: geometry\n\n`geometry` es el objeto geométrico que se utiliza para representar datos: puntos, líneas o rectángulos. Se definen con `geom_*()`. A menudo se describen los gráficos por el tipo de geom que utilizan[^1].\n\n[^1]: `geom_bar()` = gráficos de barras, `geom_line()` = gráficos de líneas, `geom_boxplot()` = diagramas de caja, `geom_point()` = gráficos de dispersión, entre otros.\n\n\n\n::: {.cell layout-align=\"center\" output-location='column-fragment'}\n\n```{.r .cell-code}\nggplot2::ggplot(\n  data = palmerpenguins::penguins,\n  mapping = ggplot2::aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  ggplot2::geom_point()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-13-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n## Agregando aesthetics\n\nPodemos agregar más propiedades visuales (**aesthetics**). `ggplot2` asigna un valor único (como color) a cada nivel de una variable categórica y añade una leyenda que lo explica. Este proceso se llama **scaling**.\n\n\n\n::: {.cell layout-align=\"center\" output-location='column-fragment'}\n\n```{.r .cell-code}\nggplot2::ggplot(\n  data = palmerpenguins::penguins,\n  mapping = ggplot2::aes(\n    x = flipper_length_mm,\n    y = body_mass_g,\n    color = species\n  )\n) +\n  ggplot2::geom_point()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-14-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n## Agregando layers\n\nPodemos hacer los gráficos más informativos agregando más layers, ya sean objetos geométricos (`geom_*`), transformaciones estadísticas (`stats_*`) o ajustes de posición (`position_*`).\n\n\n\n::: {.cell layout-align=\"center\" output-location='column-fragment'}\n\n```{.r .cell-code}\nggplot2::ggplot(\n  data = palmerpenguins::penguins,\n  mapping = ggplot2::aes(\n    x = flipper_length_mm,\n    y = body_mass_g,\n    color = species\n  )\n) +\n  ggplot2::geom_point() + \n  ggplot2::geom_smooth(\n    method = \"lm\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-15-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n## Asignación global o local\n\nLos aesthetics pueden agregarse de forma global para todo los `geom` del gráfico o pueden asignarse de forma local para un `geom` especifico. \n\n\n\n::: {.cell layout-align=\"center\" output-location='column-fragment'}\n\n```{.r .cell-code}\nggplot2::ggplot(\n  data = palmerpenguins::penguins,\n  mapping = ggplot2::aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  ggplot2::geom_point(\n    mapping = ggplot2::aes(\n      color = species\n    )\n  ) + \n  ggplot2::geom_smooth(\n    method = \"lm\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-16-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n## Accesibilidad\n\nGeneralmente no es una buena idea representar información usando sólo colores, por lo cual podemos combinar con formas o usando paletas de colores apta para personas con limitaciones visuales.\n\n\n\n::: {.cell layout-align=\"center\" output-location='column-fragment'}\n\n```{.r .cell-code}\nggplot2::ggplot(\n  data = palmerpenguins::penguins,\n  mapping = ggplot2::aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  ggplot2::geom_point(\n    mapping = ggplot2::aes(\n      color = species,\n      shape = species\n    )\n  ) + \n  ggplot2::geom_smooth(\n    method = \"lm\"\n  ) + \n  ggthemes::scale_color_colorblind()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-17-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n## `ggplot2` --- Labs\n\n`ggplot2::labs()` permite agregar o mejorar las etiquetas agregándolas en una nueva layer. Algunos de los argumentos de labs() pueden explicarse por sí solos, otros  coinciden con los **aesthetics**.\n\n\n\n::: {.cell layout-align=\"center\" output-location='column-fragment'}\n\n```{.r .cell-code}\nggplot2::ggplot(\n  data = palmerpenguins::penguins,\n  mapping = ggplot2::aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  ggplot2::geom_point(\n    mapping = ggplot2::aes(\n      color = species,\n      shape = species\n    )\n  ) + \n  ggplot2::geom_smooth(\n    method = \"lm\"\n  ) + \n  ggplot2::labs(\n    title = \"Masa corporal y longitud de la aleta\",\n    subtitle = \"Dimensiones para los Pingüinos Adelie (Adelia), Chinstrap (Barbijo) y Gentoo (Papúa)\",\n    x = \"Longitud de la aleta (mm)\",\n    y = \"Masa corporal (g)\",\n    color = \"Especies\",\n    shape = \"Especies\"\n  ) + \n  ggthemes::scale_color_colorblind()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-18-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n## `ggplot2` --- Themes\n\n`theme` controla casi todos los elementos visuales del gráfico que no están controlados por los datos y es importante para el aspecto del gráfico. Puede utilizarse muchas de las funciones de `theme_*( )`.\n\n\n\n::: {.cell layout-align=\"center\" output-location='column-fragment'}\n\n```{.r .cell-code}\nggplot2::ggplot(\n  data = palmerpenguins::penguins,\n  mapping = ggplot2::aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  ggplot2::geom_point(\n    mapping = ggplot2::aes(\n      color = species,\n      shape = species\n    )\n  ) + \n  ggplot2::geom_smooth(\n    method = \"lm\"\n  ) + \n  ggplot2::labs(\n    title = \"Masa corporal y longitud de la aleta\",\n    subtitle = \"Dimensiones para los Pingüinos Adelie (Adelia), Chinstrap (Barbijo) y Gentoo (Papúa)\",\n    x = \"Longitud de la aleta (mm)\",\n    y = \"Masa corporal (g)\",\n    color = \"Especies\",\n    shape = \"Especies\"\n  ) + \n  ggplot2::theme_minimal() +\n  ggthemes::scale_color_colorblind()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-19-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n## Invocando a `ggplot2` {.r}\n\nMientras se aprende, es bueno ser explicito con los argumentos y los valores.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot2::ggplot(\n  data = palmerpenguins::penguins,\n  mapping = ggplot2::aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  ggplot2::geom_point()\n```\n:::\n\n\n\n::: columns\n::: {.column width=\"50%\"}\nEs común que se omita el nombre de los argumentos o que se adopten estilos o formas de escribir código.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot2::ggplot(\n  palmerpenguins::penguins,\n  ggplot2::aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  ggplot2::geom_point()\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\nLo anterior, en un flujo de trabajo usando `|>` se vería así:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  ggplot2::ggplot(\n    ggplot2::aes(\n      x = flipper_length_mm,\n      y = body_mass_g)\n  ) +\n  ggplot2::geom_point()\n```\n:::\n\n\n:::\n:::\n\n::: footer\nUno de los estilos recomendables es [la guía de estilo del tidyverse](https://style.tidyverse.org)\n:::\n\n# `<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 640 512\" style=\"height:1em;width:1.25em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:white;overflow:visible;position:relative;\"><path d=\"M64 96c0-35.3 28.7-64 64-64H512c35.3 0 64 28.7 64 64V352H512V96H128V352H64V96zM0 403.2C0 392.6 8.6 384 19.2 384H620.8c10.6 0 19.2 8.6 19.2 19.2c0 42.4-34.4 76.8-76.8 76.8H76.8C34.4 480 0 445.6 0 403.2zM281 209l-31 31 31 31c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-48-48c-9.4-9.4-9.4-24.6 0-33.9l48-48c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9zM393 175l48 48c9.4 9.4 9.4 24.6 0 33.9l-48 48c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l31-31-31-31c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0z\"/></svg>`{=html} Actividad {background-color=\"#0072B2\" transition=\"slide-in\"}\n\n-   Ejemplo de actividad\n-   Ejemplo de actividad\n-   Ejemplo de actividad\n\n<br>\n<br>\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_2e368dea\" data-update-every=\"1\" data-play-sound=\"true\" tabindex=\"0\" style=\"right:0;bottom:0;font-size:2em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">01</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n\n## Una variable categórica\n\n::: columns\n::: {.column .fragment width=\"50%\"}\nUna variable es categórica si solo puede tomar uno de un pequeño conjunto de valores. Para examinar la distribución de una variable categórica, se puede utilizar un gráfico de barras. La altura de las barras muestra cuántas observaciones ocurrieron con cada valor de x.\n\n\n\n::: {.cell layout-align=\"center\" output-location='fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  ggplot2::ggplot(\n    ggplot2::aes(\n      x = species\n    )\n  ) +\n  ggplot2::geom_bar()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-24-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n:::\n\n::: {.column .fragment width=\"50%\"}\nEn gráficos de barras de variables categóricas con niveles no ordenados, a menudo es preferible reordenar las barras según sus frecuencias. Para hacerlo, es necesario transformar la variable en un factor y luego reordenar los niveles de ese factor. Lo podemos hacer con `forcats::fct_infreq()`.\n\n\n\n::: {.cell layout-align=\"center\" output-location='fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  ggplot2::ggplot(\n    ggplot2::aes(\n      x = forcats::fct_infreq(species)\n    )\n  ) +\n  ggplot2::geom_bar()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-25-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n:::\n:::\n\n## Una variable numérica\n\nUna variable es numérica (o cuantitativa) si puede tomar una amplia gama de valores numéricos y tiene sentido sumarlos, restarlos o calcular promedios con esos valores. Las variables numéricas pueden ser continuas o discretas. Una visualización comúnmente utilizada para distribuciones de variables continuas es un histograma.\n\n\n\n::: {.cell layout-align=\"center\" output-location='column-fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  ggplot2::ggplot(\n    ggplot2::aes(\n      x = body_mass_g\n    )\n  ) +\n  ggplot2::geom_histogram(\n    binwidth = 200\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-26-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n## Una variable numérica\n\nUn gráfico de densidad es una versión suavizada de un histograma y una alternativa práctica, especialmente para datos continuos que provienen de una distribución subyacente suave. Muestra menos detalles que un histograma, pero puede facilitar la comprensión rápida de la forma de la distribución, especialmente con respecto a la moda y la asimetría.\n\n\n\n::: {.cell layout-align=\"center\" output-location='column-fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  ggplot2::ggplot(\n    ggplot2::aes(\n      x = body_mass_g\n    )\n  ) +\n  ggplot2::geom_density()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-27-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n## Una variable numérica y categórica\n\nPara visualizar la relación entre una variable numérica y una variable categórica, podemos usar diagramas de caja (box plots). Un diagrama de caja es un tipo de representación visual para medidas de posición (percentiles) que describen una distribución. También es útil para identificar posibles valores atípicos.\n\n\n\n::: {.cell layout-align=\"center\" output-location='column-fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  ggplot2::ggplot(\n    ggplot2::aes(\n      x = species,\n      y = body_mass_g\n    )\n  ) +\n  ggplot2::geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-28-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n## Una variable numérica y categórica\n\nAlternativamente, podemos hacer gráficos de densidad con `ggplot2::geom_density()`.\n\n::: columns\n::: {.column .fragment width=\"50%\"}\n\n\n::: {.cell layout-align=\"center\" output-location='fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  ggplot2::ggplot(\n    ggplot2::aes(\n      x = body_mass_g,\n      color = species\n    )\n  ) +\n  ggplot2::geom_density(\n    linewidth = 0.75\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-29-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n:::\n\n::: {.column .fragment width=\"50%\"}\n\n\n::: {.cell layout-align=\"center\" output-location='fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  ggplot2::ggplot(\n    ggplot2::aes(\n      x = body_mass_g,\n      color = species,\n      fill = species\n    )\n  ) +\n  ggplot2::geom_density(\n    alpha = 0.5\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-30-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n:::\n:::\n\n## Dos variables categóricas\n\nPodemos utilizar gráficos de barras apiladas para visualizar la relación entre dos variables categóricas.\n\n::: columns\n::: {.column .fragment width=\"50%\"}\n\n\n::: {.cell layout-align=\"center\" output-location='fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  ggplot2::ggplot(\n    ggplot2::aes(\n      x = island,\n      fill = species\n    )\n  ) +\n  ggplot2::geom_bar()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-31-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n:::\n\n::: {.column .fragment width=\"50%\"}\n\n\n::: {.cell layout-align=\"center\" output-location='fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  ggplot2::ggplot(\n    ggplot2::aes(\n      x = island,\n      fill = species\n    )\n  ) +\n  ggplot2::geom_bar(\n    position = \"fill\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-32-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n:::\n:::\n\n## Dos variables numéricas\nUn diagrama de dispersión es probablemente el gráfico más utilizado para visualizar la relación entre dos variables numéricas.\n\n\n\n::: {.cell layout-align=\"center\" output-location='column-fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  ggplot2::ggplot(\n    ggplot2::aes(\n      x = flipper_length_mm,\n      y = body_mass_g\n    )\n  ) +\n  ggplot2::geom_point(\n    ggplot2::aes(\n      color = species,\n      shape = island\n    )\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-33-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n## Tres o más variables\n\nEn `ggplot2` podemos incorporar más variables en un gráfico asignándolas a estéticas adicionales. Agregar demasiadas asignaciones estéticas a un gráfico lo hace confuso y difícil de interpretar. Una forma particularmente útil para variables categóricas es dividir el gráfico en **facets**, subgráficos que muestran cada uno un subconjunto de los datos.\n\n\n\n::: {.cell layout-align=\"center\" output-location='column-fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  ggplot2::ggplot(\n    ggplot2::aes(\n      x = flipper_length_mm,\n      y = body_mass_g\n    )\n  ) +\n  ggplot2::geom_point(\n    ggplot2::aes(\n      color = species,\n      shape = species\n    )\n  ) + \n  ggplot2::facet_wrap(\n    ~island\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-34-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n## Problemas comunes con `ggplot2`\n\nUn problema común al crear gráficos con ggplot2 es colocar el `+` en el lugar incorrecto: debe ir al final de la línea, no al inicio.\n\n::: columns\n::: {.column width=\"50%\"}\n### Forma incorrecta\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot2::ggplot(\n  data = palmerpenguins::penguins\n) \n+ ggplot2::geom_point(\n  mapping = ggplot2::aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n)\n```\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n### Forma correcta: \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot2::ggplot(\n  data = palmerpenguins::penguins\n) + \n  ggplot2::geom_point(\n    mapping = ggplot2::aes(\n      x = flipper_length_mm,\n      y = body_mass_g\n    )\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-36-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n:::\n:::\n\n## Resumen de `ggplot2`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDATA |> \n  ggplot2::ggplot(\n    ggplot2::aes(MAPPINGS)\n  ) + \n  ggplot2::geom_*()\n```\n:::\n\n\n\n\\\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDATA |> \n  ggplot2::ggplot() + \n  ggplot2::geom_*(ggplot2::aes(MAPPINGS))\n```\n:::\n\n\n\n# `<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 640 512\" style=\"height:1em;width:1.25em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:white;overflow:visible;position:relative;\"><path d=\"M64 96c0-35.3 28.7-64 64-64H512c35.3 0 64 28.7 64 64V352H512V96H128V352H64V96zM0 403.2C0 392.6 8.6 384 19.2 384H620.8c10.6 0 19.2 8.6 19.2 19.2c0 42.4-34.4 76.8-76.8 76.8H76.8C34.4 480 0 445.6 0 403.2zM281 209l-31 31 31 31c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-48-48c-9.4-9.4-9.4-24.6 0-33.9l48-48c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9zM393 175l48 48c9.4 9.4 9.4 24.6 0 33.9l-48 48c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l31-31-31-31c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0z\"/></svg>`{=html} Actividad {background-color=\"#0072B2\" transition=\"slide-in\"}\n\n-   Ejemplo de actividad\n-   Ejemplo de actividad\n-   Ejemplo de actividad\n\n<br>\n<br>\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_185b89ea\" data-update-every=\"1\" data-play-sound=\"true\" tabindex=\"0\" style=\"right:0;bottom:0;font-size:2em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">01</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n\n## Referencias\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../../site_libs/tabwid-1.1.3/tabwid.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/tabwid-1.1.3/tabwid.js\"></script>\n<link href=\"../../../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}